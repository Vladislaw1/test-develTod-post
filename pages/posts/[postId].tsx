import React, {SetStateAction, useEffect, useState} from "react";
import {NextPage} from "next";
import Head from "next/head";

import {useAppDispatch, useAppSelector} from "../../hooks/useStore";
import {onePost} from "../../store/actions/onePost";
import {IPost} from "../../types/types";
import FormAddComment from "../../components/FormAddComment/FormAddComment";
import styles from "../../styles/Post.module.css"
import CommentList from "../../components/CommentList/CommentList";

interface PostProps {
    postId: string | number,
    embed: string
}

const Post: NextPage<PostProps> = (props: PostProps) => {
    const dispatch = useAppDispatch()
    const post: IPost = useAppSelector((state => state.posts.post))

    const [openComments, setOpenComment] = useState<SetStateAction<boolean>>()

    const {postId, embed} = props

    useEffect(() => {
        dispatch(onePost(postId, embed))
    }, [dispatch,postId,embed])

    const showComment = () => {
        setOpenComment(!openComments)
    }

    const textBtn = openComments ? 'Скрыть коментарии' : 'Показать коментарии';

    return (
        <>
            <Head>
                <title>Post {post.title}</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="../../public/favicon.ico"/>
            </Head>
            <main className={styles.postPage}>
                <div className={styles.post}>
                    <div>
                        <h2 className={styles.caption}>{post.title}</h2>
                        <h2 className={styles.body}>{post.body}</h2>
                    </div>
                    <div>
                        <button type="button" className={styles.btnShwComm} onClick={showComment}>{textBtn}</button>
                        {openComments &&
                        <div>
                            <CommentList/>
                            <FormAddComment id={postId}/>
                        </div>}
                    </div>
                </div>
            </main>
        </>
    )
}

Post.getInitialProps = async (ctx: any) => {
    const {postId, _embed : embed} = ctx.query
    return {postId, embed}
}

export default Post